// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`home component renders correctly 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <Post
    match={
      Object {
        "params": Object {
          "id": "1",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": Post {
      "_reactInternalFiber": FiberNode {
        "_debugID": 50,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "match": Object {
                "params": Object {
                  "id": "1",
                },
              },
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "match": Object {
                "params": Object {
                  "id": "1",
                },
              },
            },
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container mx-auto"
                  >
                    <h1
                      class="mb-6 mt-6"
                    >
                      Edit Post
                    </h1>
                    <div
                      class="flex"
                    >
                      <div
                        class="w-1/2 mr-3"
                      >
                        <form
                          class=""
                        >
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="title"
                            >
                              Post Title
                            </label>
                            <input
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="title"
                              name="title"
                              type="text"
                              value=""
                            />
                          </div>
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="body"
                            >
                              Post Body
                            </label>
                            <textarea
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="body"
                              name="body"
                              rows="25"
                              type="text"
                            />
                          </div>
                          <button
                            class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                            type="submit"
                          >
                            Update Post
                          </button>
                        </form>
                      </div>
                      <div
                        class="w-1/2 ml-3"
                      >
                        <div
                          class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                        >
                          Preview
                        </div>
                        <div
                          class="p-4 border rounded markdown"
                        >
                          <p>
                            #
                          </p>
                          <span />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "match": Object {
                            "params": Object {
                              "id": "1",
                            },
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "match": Object {
                            "params": Object {
                              "id": "1",
                            },
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "match": Object {
                      "params": Object {
                        "id": "1",
                      },
                    },
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="container mx-auto"
                >
                  <h1
                    class="mb-6 mt-6"
                  >
                    Edit Post
                  </h1>
                  <div
                    class="flex"
                  >
                    <div
                      class="w-1/2 mr-3"
                    >
                      <form
                        class=""
                      >
                        <div
                          class="mb-6"
                        >
                          <label
                            class="block text-grey-darker text-sm font-bold mb-2"
                            for="title"
                          >
                            Post Title
                          </label>
                          <input
                            class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="title"
                            name="title"
                            type="text"
                            value=""
                          />
                        </div>
                        <div
                          class="mb-6"
                        >
                          <label
                            class="block text-grey-darker text-sm font-bold mb-2"
                            for="body"
                          >
                            Post Body
                          </label>
                          <textarea
                            class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="body"
                            name="body"
                            rows="25"
                            type="text"
                          />
                        </div>
                        <button
                          class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                          type="submit"
                        >
                          Update Post
                        </button>
                      </form>
                    </div>
                    <div
                      class="w-1/2 ml-3"
                    >
                      <div
                        class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                      >
                        Preview
                      </div>
                      <div
                        class="p-4 border rounded markdown"
                      >
                        <p>
                          #
                        </p>
                        <span />
                      </div>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "match": Object {
                        "params": Object {
                          "id": "1",
                        },
                      },
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "match": Object {
                "params": Object {
                  "id": "1",
                },
              },
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container mx-auto"
                  >
                    <h1
                      class="mb-6 mt-6"
                    >
                      Edit Post
                    </h1>
                    <div
                      class="flex"
                    >
                      <div
                        class="w-1/2 mr-3"
                      >
                        <form
                          class=""
                        >
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="title"
                            >
                              Post Title
                            </label>
                            <input
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="title"
                              name="title"
                              type="text"
                              value=""
                            />
                          </div>
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="body"
                            >
                              Post Body
                            </label>
                            <textarea
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="body"
                              name="body"
                              rows="25"
                              type="text"
                            />
                          </div>
                          <button
                            class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                            type="submit"
                          >
                            Update Post
                          </button>
                        </form>
                      </div>
                      <div
                        class="w-1/2 ml-3"
                      >
                        <div
                          class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                        >
                          Preview
                        </div>
                        <div
                          class="p-4 border rounded markdown"
                        >
                          <p>
                            #
                          </p>
                          <span />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "match": Object {
                            "params": Object {
                              "id": "1",
                            },
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "match": Object {
                            "params": Object {
                              "id": "1",
                            },
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "match": Object {
                      "params": Object {
                        "id": "1",
                      },
                    },
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="container mx-auto"
                >
                  <h1
                    class="mb-6 mt-6"
                  >
                    Edit Post
                  </h1>
                  <div
                    class="flex"
                  >
                    <div
                      class="w-1/2 mr-3"
                    >
                      <form
                        class=""
                      >
                        <div
                          class="mb-6"
                        >
                          <label
                            class="block text-grey-darker text-sm font-bold mb-2"
                            for="title"
                          >
                            Post Title
                          </label>
                          <input
                            class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="title"
                            name="title"
                            type="text"
                            value=""
                          />
                        </div>
                        <div
                          class="mb-6"
                        >
                          <label
                            class="block text-grey-darker text-sm font-bold mb-2"
                            for="body"
                          >
                            Post Body
                          </label>
                          <textarea
                            class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="body"
                            name="body"
                            rows="25"
                            type="text"
                          />
                        </div>
                        <button
                          class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                          type="submit"
                        >
                          Update Post
                        </button>
                      </form>
                    </div>
                    <div
                      class="w-1/2 ml-3"
                    >
                      <div
                        class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                      >
                        Preview
                      </div>
                      <div
                        class="p-4 border rounded markdown"
                      >
                        <p>
                          #
                        </p>
                        <span />
                      </div>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "match": Object {
                        "params": Object {
                          "id": "1",
                        },
                      },
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "match": Object {
                  "params": Object {
                    "id": "1",
                  },
                },
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "match": Object {
                  "params": Object {
                    "id": "1",
                  },
                },
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "effectTag": 0,
            "elementType": "h1",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": "Edit Post",
              "className": "mb-6 mt-6",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": "Edit Post",
              "className": "mb-6 mt-6",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 56,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 57,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 60,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "label",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Post Title",
                        "className": "block text-grey-darker text-sm font-bold mb-2",
                        "htmlFor": "title",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Post Title",
                        "className": "block text-grey-darker text-sm font-bold mb-2",
                        "htmlFor": "title",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 61,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "input",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "className": "appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline",
                          "id": "title",
                          "name": "title",
                          "onChange": [Function],
                          "type": "text",
                          "value": "",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "className": "appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline",
                          "id": "title",
                          "name": "title",
                          "onChange": [Function],
                          "type": "text",
                          "value": "",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <input
                          class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="title"
                          name="title"
                          type="text"
                          value=""
                        />,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "input",
                        "updateQueue": null,
                      },
                      "stateNode": <label
                        class="block text-grey-darker text-sm font-bold mb-2"
                        for="title"
                      >
                        Post Title
                      </label>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "label",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="title"
                        >
                          Post Title
                        </label>,
                        <input
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="title"
                          name="title"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />,
                      ],
                      "className": "mb-6",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="title"
                        >
                          Post Title
                        </label>,
                        <input
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="title"
                          name="title"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />,
                      ],
                      "className": "mb-6",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 58,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 62,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "label",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Post Body",
                          "className": "block text-grey-darker text-sm font-bold mb-2",
                          "htmlFor": "body",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Post Body",
                          "className": "block text-grey-darker text-sm font-bold mb-2",
                          "htmlFor": "body",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 63,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "textarea",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "className": "appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline",
                            "id": "body",
                            "name": "body",
                            "onChange": [Function],
                            "rows": "25",
                            "type": "text",
                            "value": "",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "className": "appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline",
                            "id": "body",
                            "name": "body",
                            "onChange": [Function],
                            "rows": "25",
                            "type": "text",
                            "value": "",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <textarea
                            class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="body"
                            name="body"
                            rows="25"
                            type="text"
                          />,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "textarea",
                          "updateQueue": null,
                        },
                        "stateNode": <label
                          class="block text-grey-darker text-sm font-bold mb-2"
                          for="body"
                        >
                          Post Body
                        </label>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "label",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <label
                            className="block text-grey-darker text-sm font-bold mb-2"
                            htmlFor="body"
                          >
                            Post Body
                          </label>,
                          <textarea
                            className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="body"
                            name="body"
                            onChange={[Function]}
                            rows="25"
                            type="text"
                            value=""
                          />,
                        ],
                        "className": "mb-6",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <label
                            className="block text-grey-darker text-sm font-bold mb-2"
                            htmlFor="body"
                          >
                            Post Body
                          </label>,
                          <textarea
                            className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="body"
                            name="body"
                            onChange={[Function]}
                            rows="25"
                            type="text"
                            value=""
                          />,
                        ],
                        "className": "mb-6",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 59,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "button",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Update Post",
                          "className": "bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline",
                          "type": "submit",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Update Post",
                          "className": "bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline",
                          "type": "submit",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <button
                          class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                          type="submit"
                        >
                          Update Post
                        </button>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "button",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="mb-6"
                      >
                        <label
                          class="block text-grey-darker text-sm font-bold mb-2"
                          for="body"
                        >
                          Post Body
                        </label>
                        <textarea
                          class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="body"
                          name="body"
                          rows="25"
                          type="text"
                        />
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="mb-6"
                    >
                      <label
                        class="block text-grey-darker text-sm font-bold mb-2"
                        for="title"
                      >
                        Post Title
                      </label>
                      <input
                        class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="title"
                        name="title"
                        type="text"
                        value=""
                      />
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "form",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        className="mb-6"
                      >
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="title"
                        >
                          Post Title
                        </label>
                        <input
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="title"
                          name="title"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />
                      </div>,
                      <div
                        className="mb-6"
                      >
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="body"
                        >
                          Post Body
                        </label>
                        <textarea
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="body"
                          name="body"
                          onChange={[Function]}
                          rows="25"
                          type="text"
                          value=""
                        />
                      </div>,
                      <button
                        className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                        type="submit"
                      >
                        Update Post
                      </button>,
                    ],
                    "className": "",
                    "onSubmit": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <div
                        className="mb-6"
                      >
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="title"
                        >
                          Post Title
                        </label>
                        <input
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="title"
                          name="title"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />
                      </div>,
                      <div
                        className="mb-6"
                      >
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="body"
                        >
                          Post Body
                        </label>
                        <textarea
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="body"
                          name="body"
                          onChange={[Function]}
                          rows="25"
                          type="text"
                          value=""
                        />
                      </div>,
                      <button
                        className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                        type="submit"
                      >
                        Update Post
                      </button>,
                    ],
                    "className": "",
                    "onSubmit": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <form
                    class=""
                  >
                    <div
                      class="mb-6"
                    >
                      <label
                        class="block text-grey-darker text-sm font-bold mb-2"
                        for="title"
                      >
                        Post Title
                      </label>
                      <input
                        class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="title"
                        name="title"
                        type="text"
                        value=""
                      />
                    </div>
                    <div
                      class="mb-6"
                    >
                      <label
                        class="block text-grey-darker text-sm font-bold mb-2"
                        for="body"
                      >
                        Post Body
                      </label>
                      <textarea
                        class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="body"
                        name="body"
                        rows="25"
                        type="text"
                      />
                    </div>
                    <button
                      class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                      type="submit"
                    >
                      Update Post
                    </button>
                  </form>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "form",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <form
                    className=""
                    onSubmit={[Function]}
                  >
                    <div
                      className="mb-6"
                    >
                      <label
                        className="block text-grey-darker text-sm font-bold mb-2"
                        htmlFor="title"
                      >
                        Post Title
                      </label>
                      <input
                        className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="title"
                        name="title"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </div>
                    <div
                      className="mb-6"
                    >
                      <label
                        className="block text-grey-darker text-sm font-bold mb-2"
                        htmlFor="body"
                      >
                        Post Body
                      </label>
                      <textarea
                        className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="body"
                        name="body"
                        onChange={[Function]}
                        rows="25"
                        type="text"
                        value=""
                      />
                    </div>
                    <button
                      className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                      type="submit"
                    >
                      Update Post
                    </button>
                  </form>,
                  "className": "w-1/2 mr-3",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <form
                    className=""
                    onSubmit={[Function]}
                  >
                    <div
                      className="mb-6"
                    >
                      <label
                        className="block text-grey-darker text-sm font-bold mb-2"
                        htmlFor="title"
                      >
                        Post Title
                      </label>
                      <input
                        className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="title"
                        name="title"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </div>
                    <div
                      className="mb-6"
                    >
                      <label
                        className="block text-grey-darker text-sm font-bold mb-2"
                        htmlFor="body"
                      >
                        Post Body
                      </label>
                      <textarea
                        className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="body"
                        name="body"
                        onChange={[Function]}
                        rows="25"
                        type="text"
                        value=""
                      />
                    </div>
                    <button
                      className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                      type="submit"
                    >
                      Update Post
                    </button>
                  </form>,
                  "className": "w-1/2 mr-3",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 64,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Preview",
                      "className": "block text-grey-darker text-sm font-bold mb-2 ml-4",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Preview",
                      "className": "block text-grey-darker text-sm font-bold mb-2 ml-4",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 65,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 66,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 68,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 69,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": null,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": "#",
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": "#",
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": #,
                            "tag": 6,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "p",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": "0",
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              "#",
                            ],
                            "className": undefined,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              "#",
                            ],
                            "className": undefined,
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <p>
                            #
                          </p>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "# ",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "# ",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 67,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 70,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "span",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "className": undefined,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "className": undefined,
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <span />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "span",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <Markdown>
                            # 
                          </Markdown>,
                          <Markdown>
                            
                          </Markdown>,
                        ],
                        "className": "p-4 border rounded markdown",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <Markdown>
                            # 
                          </Markdown>,
                          <Markdown>
                            
                          </Markdown>,
                        ],
                        "className": "p-4 border rounded markdown",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="p-4 border rounded markdown"
                      >
                        <p>
                          #
                        </p>
                        <span />
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                    >
                      Preview
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        className="block text-grey-darker text-sm font-bold mb-2 ml-4"
                      >
                        Preview
                      </div>,
                      <div
                        className="p-4 border rounded markdown"
                      >
                        <Markdown>
                          # 
                        </Markdown>
                        <Markdown>
                          
                        </Markdown>
                      </div>,
                    ],
                    "className": "w-1/2 ml-3",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <div
                        className="block text-grey-darker text-sm font-bold mb-2 ml-4"
                      >
                        Preview
                      </div>,
                      <div
                        className="p-4 border rounded markdown"
                      >
                        <Markdown>
                          # 
                        </Markdown>
                        <Markdown>
                          
                        </Markdown>
                      </div>,
                    ],
                    "className": "w-1/2 ml-3",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="w-1/2 ml-3"
                  >
                    <div
                      class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                    >
                      Preview
                    </div>
                    <div
                      class="p-4 border rounded markdown"
                    >
                      <p>
                        #
                      </p>
                      <span />
                    </div>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="w-1/2 mr-3"
                >
                  <form
                    class=""
                  >
                    <div
                      class="mb-6"
                    >
                      <label
                        class="block text-grey-darker text-sm font-bold mb-2"
                        for="title"
                      >
                        Post Title
                      </label>
                      <input
                        class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="title"
                        name="title"
                        type="text"
                        value=""
                      />
                    </div>
                    <div
                      class="mb-6"
                    >
                      <label
                        class="block text-grey-darker text-sm font-bold mb-2"
                        for="body"
                      >
                        Post Body
                      </label>
                      <textarea
                        class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="body"
                        name="body"
                        rows="25"
                        type="text"
                      />
                    </div>
                    <button
                      class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                      type="submit"
                    >
                      Update Post
                    </button>
                  </form>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="w-1/2 mr-3"
                  >
                    <form
                      className=""
                      onSubmit={[Function]}
                    >
                      <div
                        className="mb-6"
                      >
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="title"
                        >
                          Post Title
                        </label>
                        <input
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="title"
                          name="title"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />
                      </div>
                      <div
                        className="mb-6"
                      >
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="body"
                        >
                          Post Body
                        </label>
                        <textarea
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="body"
                          name="body"
                          onChange={[Function]}
                          rows="25"
                          type="text"
                          value=""
                        />
                      </div>
                      <button
                        className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                        type="submit"
                      >
                        Update Post
                      </button>
                    </form>
                  </div>,
                  <div
                    className="w-1/2 ml-3"
                  >
                    <div
                      className="block text-grey-darker text-sm font-bold mb-2 ml-4"
                    >
                      Preview
                    </div>
                    <div
                      className="p-4 border rounded markdown"
                    >
                      <Markdown>
                        # 
                      </Markdown>
                      <Markdown>
                        
                      </Markdown>
                    </div>
                  </div>,
                ],
                "className": "flex",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <div
                    className="w-1/2 mr-3"
                  >
                    <form
                      className=""
                      onSubmit={[Function]}
                    >
                      <div
                        className="mb-6"
                      >
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="title"
                        >
                          Post Title
                        </label>
                        <input
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="title"
                          name="title"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />
                      </div>
                      <div
                        className="mb-6"
                      >
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="body"
                        >
                          Post Body
                        </label>
                        <textarea
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="body"
                          name="body"
                          onChange={[Function]}
                          rows="25"
                          type="text"
                          value=""
                        />
                      </div>
                      <button
                        className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                        type="submit"
                      >
                        Update Post
                      </button>
                    </form>
                  </div>,
                  <div
                    className="w-1/2 ml-3"
                  >
                    <div
                      className="block text-grey-darker text-sm font-bold mb-2 ml-4"
                    >
                      Preview
                    </div>
                    <div
                      className="p-4 border rounded markdown"
                    >
                      <Markdown>
                        # 
                      </Markdown>
                      <Markdown>
                        
                      </Markdown>
                    </div>
                  </div>,
                ],
                "className": "flex",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div
                class="flex"
              >
                <div
                  class="w-1/2 mr-3"
                >
                  <form
                    class=""
                  >
                    <div
                      class="mb-6"
                    >
                      <label
                        class="block text-grey-darker text-sm font-bold mb-2"
                        for="title"
                      >
                        Post Title
                      </label>
                      <input
                        class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="title"
                        name="title"
                        type="text"
                        value=""
                      />
                    </div>
                    <div
                      class="mb-6"
                    >
                      <label
                        class="block text-grey-darker text-sm font-bold mb-2"
                        for="body"
                      >
                        Post Body
                      </label>
                      <textarea
                        class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="body"
                        name="body"
                        rows="25"
                        type="text"
                      />
                    </div>
                    <button
                      class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                      type="submit"
                    >
                      Update Post
                    </button>
                  </form>
                </div>
                <div
                  class="w-1/2 ml-3"
                >
                  <div
                    class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                  >
                    Preview
                  </div>
                  <div
                    class="p-4 border rounded markdown"
                  >
                    <p>
                      #
                    </p>
                    <span />
                  </div>
                </div>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "stateNode": <h1
              class="mb-6 mt-6"
            >
              Edit Post
            </h1>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "h1",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 0,
          "elementType": "div",
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <h1
                className="mb-6 mt-6"
              >
                Edit Post
              </h1>,
              <div
                className="flex"
              >
                <div
                  className="w-1/2 mr-3"
                >
                  <form
                    className=""
                    onSubmit={[Function]}
                  >
                    <div
                      className="mb-6"
                    >
                      <label
                        className="block text-grey-darker text-sm font-bold mb-2"
                        htmlFor="title"
                      >
                        Post Title
                      </label>
                      <input
                        className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="title"
                        name="title"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </div>
                    <div
                      className="mb-6"
                    >
                      <label
                        className="block text-grey-darker text-sm font-bold mb-2"
                        htmlFor="body"
                      >
                        Post Body
                      </label>
                      <textarea
                        className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="body"
                        name="body"
                        onChange={[Function]}
                        rows="25"
                        type="text"
                        value=""
                      />
                    </div>
                    <button
                      className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                      type="submit"
                    >
                      Update Post
                    </button>
                  </form>
                </div>
                <div
                  className="w-1/2 ml-3"
                >
                  <div
                    className="block text-grey-darker text-sm font-bold mb-2 ml-4"
                  >
                    Preview
                  </div>
                  <div
                    className="p-4 border rounded markdown"
                  >
                    <Markdown>
                      # 
                    </Markdown>
                    <Markdown>
                      
                    </Markdown>
                  </div>
                </div>
              </div>,
            ],
            "className": "container mx-auto",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <h1
                className="mb-6 mt-6"
              >
                Edit Post
              </h1>,
              <div
                className="flex"
              >
                <div
                  className="w-1/2 mr-3"
                >
                  <form
                    className=""
                    onSubmit={[Function]}
                  >
                    <div
                      className="mb-6"
                    >
                      <label
                        className="block text-grey-darker text-sm font-bold mb-2"
                        htmlFor="title"
                      >
                        Post Title
                      </label>
                      <input
                        className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="title"
                        name="title"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </div>
                    <div
                      className="mb-6"
                    >
                      <label
                        className="block text-grey-darker text-sm font-bold mb-2"
                        htmlFor="body"
                      >
                        Post Body
                      </label>
                      <textarea
                        className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="body"
                        name="body"
                        onChange={[Function]}
                        rows="25"
                        type="text"
                        value=""
                      />
                    </div>
                    <button
                      className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                      type="submit"
                    >
                      Update Post
                    </button>
                  </form>
                </div>
                <div
                  className="w-1/2 ml-3"
                >
                  <div
                    className="block text-grey-darker text-sm font-bold mb-2 ml-4"
                  >
                    Preview
                  </div>
                  <div
                    className="p-4 border rounded markdown"
                  >
                    <Markdown>
                      # 
                    </Markdown>
                    <Markdown>
                      
                    </Markdown>
                  </div>
                </div>
              </div>,
            ],
            "className": "container mx-auto",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": <div
            class="container mx-auto"
          >
            <h1
              class="mb-6 mt-6"
            >
              Edit Post
            </h1>
            <div
              class="flex"
            >
              <div
                class="w-1/2 mr-3"
              >
                <form
                  class=""
                >
                  <div
                    class="mb-6"
                  >
                    <label
                      class="block text-grey-darker text-sm font-bold mb-2"
                      for="title"
                    >
                      Post Title
                    </label>
                    <input
                      class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                      id="title"
                      name="title"
                      type="text"
                      value=""
                    />
                  </div>
                  <div
                    class="mb-6"
                  >
                    <label
                      class="block text-grey-darker text-sm font-bold mb-2"
                      for="body"
                    >
                      Post Body
                    </label>
                    <textarea
                      class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                      id="body"
                      name="body"
                      rows="25"
                      type="text"
                    />
                  </div>
                  <button
                    class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                    type="submit"
                  >
                    Update Post
                  </button>
                </form>
              </div>
              <div
                class="w-1/2 ml-3"
              >
                <div
                  class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                >
                  Preview
                </div>
                <div
                  class="p-4 border rounded markdown"
                >
                  <p>
                    #
                  </p>
                  <span />
                </div>
              </div>
            </div>
          </div>,
          "tag": 5,
          "treeBaseDuration": 0,
          "type": "div",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "effectTag": 5,
        "elementType": [Function],
        "expirationTime": 0,
        "firstContextDependency": null,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "match": Object {
            "params": Object {
              "id": "1",
            },
          },
        },
        "memoizedState": Object {
          "body": "",
          "title": "",
        },
        "mode": 0,
        "nextEffect": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "match": Object {
                "params": Object {
                  "id": "1",
                },
              },
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "match": Object {
                "params": Object {
                  "id": "1",
                },
              },
            },
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container mx-auto"
                  >
                    <h1
                      class="mb-6 mt-6"
                    >
                      Edit Post
                    </h1>
                    <div
                      class="flex"
                    >
                      <div
                        class="w-1/2 mr-3"
                      >
                        <form
                          class=""
                        >
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="title"
                            >
                              Post Title
                            </label>
                            <input
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="title"
                              name="title"
                              type="text"
                              value=""
                            />
                          </div>
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="body"
                            >
                              Post Body
                            </label>
                            <textarea
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="body"
                              name="body"
                              rows="25"
                              type="text"
                            />
                          </div>
                          <button
                            class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                            type="submit"
                          >
                            Update Post
                          </button>
                        </form>
                      </div>
                      <div
                        class="w-1/2 ml-3"
                      >
                        <div
                          class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                        >
                          Preview
                        </div>
                        <div
                          class="p-4 border rounded markdown"
                        >
                          <p>
                            #
                          </p>
                          <span />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "match": Object {
                            "params": Object {
                              "id": "1",
                            },
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "match": Object {
                            "params": Object {
                              "id": "1",
                            },
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "match": Object {
                      "params": Object {
                        "id": "1",
                      },
                    },
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="container mx-auto"
                >
                  <h1
                    class="mb-6 mt-6"
                  >
                    Edit Post
                  </h1>
                  <div
                    class="flex"
                  >
                    <div
                      class="w-1/2 mr-3"
                    >
                      <form
                        class=""
                      >
                        <div
                          class="mb-6"
                        >
                          <label
                            class="block text-grey-darker text-sm font-bold mb-2"
                            for="title"
                          >
                            Post Title
                          </label>
                          <input
                            class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="title"
                            name="title"
                            type="text"
                            value=""
                          />
                        </div>
                        <div
                          class="mb-6"
                        >
                          <label
                            class="block text-grey-darker text-sm font-bold mb-2"
                            for="body"
                          >
                            Post Body
                          </label>
                          <textarea
                            class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="body"
                            name="body"
                            rows="25"
                            type="text"
                          />
                        </div>
                        <button
                          class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                          type="submit"
                        >
                          Update Post
                        </button>
                      </form>
                    </div>
                    <div
                      class="w-1/2 ml-3"
                    >
                      <div
                        class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                      >
                        Preview
                      </div>
                      <div
                        class="p-4 border rounded markdown"
                      >
                        <p>
                          #
                        </p>
                        <span />
                      </div>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "match": Object {
                        "params": Object {
                          "id": "1",
                        },
                      },
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "match": Object {
                "params": Object {
                  "id": "1",
                },
              },
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container mx-auto"
                  >
                    <h1
                      class="mb-6 mt-6"
                    >
                      Edit Post
                    </h1>
                    <div
                      class="flex"
                    >
                      <div
                        class="w-1/2 mr-3"
                      >
                        <form
                          class=""
                        >
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="title"
                            >
                              Post Title
                            </label>
                            <input
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="title"
                              name="title"
                              type="text"
                              value=""
                            />
                          </div>
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="body"
                            >
                              Post Body
                            </label>
                            <textarea
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="body"
                              name="body"
                              rows="25"
                              type="text"
                            />
                          </div>
                          <button
                            class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                            type="submit"
                          >
                            Update Post
                          </button>
                        </form>
                      </div>
                      <div
                        class="w-1/2 ml-3"
                      >
                        <div
                          class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                        >
                          Preview
                        </div>
                        <div
                          class="p-4 border rounded markdown"
                        >
                          <p>
                            #
                          </p>
                          <span />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "match": Object {
                            "params": Object {
                              "id": "1",
                            },
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "match": Object {
                            "params": Object {
                              "id": "1",
                            },
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "match": Object {
                      "params": Object {
                        "id": "1",
                      },
                    },
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="container mx-auto"
                >
                  <h1
                    class="mb-6 mt-6"
                  >
                    Edit Post
                  </h1>
                  <div
                    class="flex"
                  >
                    <div
                      class="w-1/2 mr-3"
                    >
                      <form
                        class=""
                      >
                        <div
                          class="mb-6"
                        >
                          <label
                            class="block text-grey-darker text-sm font-bold mb-2"
                            for="title"
                          >
                            Post Title
                          </label>
                          <input
                            class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="title"
                            name="title"
                            type="text"
                            value=""
                          />
                        </div>
                        <div
                          class="mb-6"
                        >
                          <label
                            class="block text-grey-darker text-sm font-bold mb-2"
                            for="body"
                          >
                            Post Body
                          </label>
                          <textarea
                            class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="body"
                            name="body"
                            rows="25"
                            type="text"
                          />
                        </div>
                        <button
                          class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                          type="submit"
                        >
                          Update Post
                        </button>
                      </form>
                    </div>
                    <div
                      class="w-1/2 ml-3"
                    >
                      <div
                        class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                      >
                        Preview
                      </div>
                      <div
                        class="p-4 border rounded markdown"
                      >
                        <p>
                          #
                        </p>
                        <span />
                      </div>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "match": Object {
                        "params": Object {
                          "id": "1",
                        },
                      },
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "match": Object {
                  "params": Object {
                    "id": "1",
                  },
                },
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "match": Object {
                  "params": Object {
                    "id": "1",
                  },
                },
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "pendingProps": Object {
          "match": Object {
            "params": Object {
              "id": "1",
            },
          },
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "match": Object {
                "params": Object {
                  "id": "1",
                },
              },
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "match": Object {
                "params": Object {
                  "id": "1",
                },
              },
            },
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container mx-auto"
                  >
                    <h1
                      class="mb-6 mt-6"
                    >
                      Edit Post
                    </h1>
                    <div
                      class="flex"
                    >
                      <div
                        class="w-1/2 mr-3"
                      >
                        <form
                          class=""
                        >
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="title"
                            >
                              Post Title
                            </label>
                            <input
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="title"
                              name="title"
                              type="text"
                              value=""
                            />
                          </div>
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="body"
                            >
                              Post Body
                            </label>
                            <textarea
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="body"
                              name="body"
                              rows="25"
                              type="text"
                            />
                          </div>
                          <button
                            class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                            type="submit"
                          >
                            Update Post
                          </button>
                        </form>
                      </div>
                      <div
                        class="w-1/2 ml-3"
                      >
                        <div
                          class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                        >
                          Preview
                        </div>
                        <div
                          class="p-4 border rounded markdown"
                        >
                          <p>
                            #
                          </p>
                          <span />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "match": Object {
                            "params": Object {
                              "id": "1",
                            },
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "match": Object {
                            "params": Object {
                              "id": "1",
                            },
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "match": Object {
                      "params": Object {
                        "id": "1",
                      },
                    },
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="container mx-auto"
                >
                  <h1
                    class="mb-6 mt-6"
                  >
                    Edit Post
                  </h1>
                  <div
                    class="flex"
                  >
                    <div
                      class="w-1/2 mr-3"
                    >
                      <form
                        class=""
                      >
                        <div
                          class="mb-6"
                        >
                          <label
                            class="block text-grey-darker text-sm font-bold mb-2"
                            for="title"
                          >
                            Post Title
                          </label>
                          <input
                            class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="title"
                            name="title"
                            type="text"
                            value=""
                          />
                        </div>
                        <div
                          class="mb-6"
                        >
                          <label
                            class="block text-grey-darker text-sm font-bold mb-2"
                            for="body"
                          >
                            Post Body
                          </label>
                          <textarea
                            class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="body"
                            name="body"
                            rows="25"
                            type="text"
                          />
                        </div>
                        <button
                          class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                          type="submit"
                        >
                          Update Post
                        </button>
                      </form>
                    </div>
                    <div
                      class="w-1/2 ml-3"
                    >
                      <div
                        class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                      >
                        Preview
                      </div>
                      <div
                        class="p-4 border rounded markdown"
                      >
                        <p>
                          #
                        </p>
                        <span />
                      </div>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "match": Object {
                        "params": Object {
                          "id": "1",
                        },
                      },
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "match": Object {
                "params": Object {
                  "id": "1",
                },
              },
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container mx-auto"
                  >
                    <h1
                      class="mb-6 mt-6"
                    >
                      Edit Post
                    </h1>
                    <div
                      class="flex"
                    >
                      <div
                        class="w-1/2 mr-3"
                      >
                        <form
                          class=""
                        >
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="title"
                            >
                              Post Title
                            </label>
                            <input
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="title"
                              name="title"
                              type="text"
                              value=""
                            />
                          </div>
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="body"
                            >
                              Post Body
                            </label>
                            <textarea
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="body"
                              name="body"
                              rows="25"
                              type="text"
                            />
                          </div>
                          <button
                            class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                            type="submit"
                          >
                            Update Post
                          </button>
                        </form>
                      </div>
                      <div
                        class="w-1/2 ml-3"
                      >
                        <div
                          class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                        >
                          Preview
                        </div>
                        <div
                          class="p-4 border rounded markdown"
                        >
                          <p>
                            #
                          </p>
                          <span />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "match": Object {
                            "params": Object {
                              "id": "1",
                            },
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "match": Object {
                            "params": Object {
                              "id": "1",
                            },
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "match": Object {
                      "params": Object {
                        "id": "1",
                      },
                    },
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="container mx-auto"
                >
                  <h1
                    class="mb-6 mt-6"
                  >
                    Edit Post
                  </h1>
                  <div
                    class="flex"
                  >
                    <div
                      class="w-1/2 mr-3"
                    >
                      <form
                        class=""
                      >
                        <div
                          class="mb-6"
                        >
                          <label
                            class="block text-grey-darker text-sm font-bold mb-2"
                            for="title"
                          >
                            Post Title
                          </label>
                          <input
                            class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="title"
                            name="title"
                            type="text"
                            value=""
                          />
                        </div>
                        <div
                          class="mb-6"
                        >
                          <label
                            class="block text-grey-darker text-sm font-bold mb-2"
                            for="body"
                          >
                            Post Body
                          </label>
                          <textarea
                            class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="body"
                            name="body"
                            rows="25"
                            type="text"
                          />
                        </div>
                        <button
                          class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                          type="submit"
                        >
                          Update Post
                        </button>
                      </form>
                    </div>
                    <div
                      class="w-1/2 ml-3"
                    >
                      <div
                        class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                      >
                        Preview
                      </div>
                      <div
                        class="p-4 border rounded markdown"
                      >
                        <p>
                          #
                        </p>
                        <span />
                      </div>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "match": Object {
                        "params": Object {
                          "id": "1",
                        },
                      },
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "match": Object {
                  "params": Object {
                    "id": "1",
                  },
                },
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "match": Object {
                  "params": Object {
                    "id": "1",
                  },
                },
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "handleChange": [Function],
      "handleSubmit": [Function],
      "props": Object {
        "match": Object {
          "params": Object {
            "id": "1",
          },
        },
      },
      "refs": Object {},
      "state": Object {
        "body": "",
        "title": "",
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "match": Object {
        "params": Object {
          "id": "1",
        },
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="container mx-auto"
      >
        <h1
          class="mb-6 mt-6"
        >
          Edit Post
        </h1>
        <div
          class="flex"
        >
          <div
            class="w-1/2 mr-3"
          >
            <form
              class=""
            >
              <div
                class="mb-6"
              >
                <label
                  class="block text-grey-darker text-sm font-bold mb-2"
                  for="title"
                >
                  Post Title
                </label>
                <input
                  class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                  id="title"
                  name="title"
                  type="text"
                  value=""
                />
              </div>
              <div
                class="mb-6"
              >
                <label
                  class="block text-grey-darker text-sm font-bold mb-2"
                  for="body"
                >
                  Post Body
                </label>
                <textarea
                  class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                  id="body"
                  name="body"
                  rows="25"
                  type="text"
                />
              </div>
              <button
                class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                type="submit"
              >
                Update Post
              </button>
            </form>
          </div>
          <div
            class="w-1/2 ml-3"
          >
            <div
              class="block text-grey-darker text-sm font-bold mb-2 ml-4"
            >
              Preview
            </div>
            <div
              class="p-4 border rounded markdown"
            >
              <p>
                #
              </p>
              <span />
            </div>
          </div>
        </div>
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="mb-6 mt-6"
          >
            Edit Post
          </h1>,
          <div
            className="flex"
          >
            <div
              className="w-1/2 mr-3"
            >
              <form
                className=""
                onSubmit={[Function]}
              >
                <div
                  className="mb-6"
                >
                  <label
                    className="block text-grey-darker text-sm font-bold mb-2"
                    htmlFor="title"
                  >
                    Post Title
                  </label>
                  <input
                    className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                    id="title"
                    name="title"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </div>
                <div
                  className="mb-6"
                >
                  <label
                    className="block text-grey-darker text-sm font-bold mb-2"
                    htmlFor="body"
                  >
                    Post Body
                  </label>
                  <textarea
                    className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                    id="body"
                    name="body"
                    onChange={[Function]}
                    rows="25"
                    type="text"
                    value=""
                  />
                </div>
                <button
                  className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                  type="submit"
                >
                  Update Post
                </button>
              </form>
            </div>
            <div
              className="w-1/2 ml-3"
            >
              <div
                className="block text-grey-darker text-sm font-bold mb-2 ml-4"
              >
                Preview
              </div>
              <div
                className="p-4 border rounded markdown"
              >
                <Markdown>
                  # 
                </Markdown>
                <Markdown>
                  
                </Markdown>
              </div>
            </div>
          </div>,
        ],
        "className": "container mx-auto",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <h1
            class="mb-6 mt-6"
          >
            Edit Post
          </h1>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Edit Post",
            "className": "mb-6 mt-6",
          },
          "ref": null,
          "rendered": Array [
            "Edit Post",
          ],
          "type": "h1",
        },
        Object {
          "instance": <div
            class="flex"
          >
            <div
              class="w-1/2 mr-3"
            >
              <form
                class=""
              >
                <div
                  class="mb-6"
                >
                  <label
                    class="block text-grey-darker text-sm font-bold mb-2"
                    for="title"
                  >
                    Post Title
                  </label>
                  <input
                    class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                    id="title"
                    name="title"
                    type="text"
                    value=""
                  />
                </div>
                <div
                  class="mb-6"
                >
                  <label
                    class="block text-grey-darker text-sm font-bold mb-2"
                    for="body"
                  >
                    Post Body
                  </label>
                  <textarea
                    class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                    id="body"
                    name="body"
                    rows="25"
                    type="text"
                  />
                </div>
                <button
                  class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                  type="submit"
                >
                  Update Post
                </button>
              </form>
            </div>
            <div
              class="w-1/2 ml-3"
            >
              <div
                class="block text-grey-darker text-sm font-bold mb-2 ml-4"
              >
                Preview
              </div>
              <div
                class="p-4 border rounded markdown"
              >
                <p>
                  #
                </p>
                <span />
              </div>
            </div>
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="w-1/2 mr-3"
              >
                <form
                  className=""
                  onSubmit={[Function]}
                >
                  <div
                    className="mb-6"
                  >
                    <label
                      className="block text-grey-darker text-sm font-bold mb-2"
                      htmlFor="title"
                    >
                      Post Title
                    </label>
                    <input
                      className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                      id="title"
                      name="title"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                  </div>
                  <div
                    className="mb-6"
                  >
                    <label
                      className="block text-grey-darker text-sm font-bold mb-2"
                      htmlFor="body"
                    >
                      Post Body
                    </label>
                    <textarea
                      className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                      id="body"
                      name="body"
                      onChange={[Function]}
                      rows="25"
                      type="text"
                      value=""
                    />
                  </div>
                  <button
                    className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                    type="submit"
                  >
                    Update Post
                  </button>
                </form>
              </div>,
              <div
                className="w-1/2 ml-3"
              >
                <div
                  className="block text-grey-darker text-sm font-bold mb-2 ml-4"
                >
                  Preview
                </div>
                <div
                  className="p-4 border rounded markdown"
                >
                  <Markdown>
                    # 
                  </Markdown>
                  <Markdown>
                    
                  </Markdown>
                </div>
              </div>,
            ],
            "className": "flex",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <div
                class="w-1/2 mr-3"
              >
                <form
                  class=""
                >
                  <div
                    class="mb-6"
                  >
                    <label
                      class="block text-grey-darker text-sm font-bold mb-2"
                      for="title"
                    >
                      Post Title
                    </label>
                    <input
                      class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                      id="title"
                      name="title"
                      type="text"
                      value=""
                    />
                  </div>
                  <div
                    class="mb-6"
                  >
                    <label
                      class="block text-grey-darker text-sm font-bold mb-2"
                      for="body"
                    >
                      Post Body
                    </label>
                    <textarea
                      class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                      id="body"
                      name="body"
                      rows="25"
                      type="text"
                    />
                  </div>
                  <button
                    class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                    type="submit"
                  >
                    Update Post
                  </button>
                </form>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <form
                  className=""
                  onSubmit={[Function]}
                >
                  <div
                    className="mb-6"
                  >
                    <label
                      className="block text-grey-darker text-sm font-bold mb-2"
                      htmlFor="title"
                    >
                      Post Title
                    </label>
                    <input
                      className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                      id="title"
                      name="title"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                  </div>
                  <div
                    className="mb-6"
                  >
                    <label
                      className="block text-grey-darker text-sm font-bold mb-2"
                      htmlFor="body"
                    >
                      Post Body
                    </label>
                    <textarea
                      className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                      id="body"
                      name="body"
                      onChange={[Function]}
                      rows="25"
                      type="text"
                      value=""
                    />
                  </div>
                  <button
                    className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                    type="submit"
                  >
                    Update Post
                  </button>
                </form>,
                "className": "w-1/2 mr-3",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <form
                    class=""
                  >
                    <div
                      class="mb-6"
                    >
                      <label
                        class="block text-grey-darker text-sm font-bold mb-2"
                        for="title"
                      >
                        Post Title
                      </label>
                      <input
                        class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="title"
                        name="title"
                        type="text"
                        value=""
                      />
                    </div>
                    <div
                      class="mb-6"
                    >
                      <label
                        class="block text-grey-darker text-sm font-bold mb-2"
                        for="body"
                      >
                        Post Body
                      </label>
                      <textarea
                        class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="body"
                        name="body"
                        rows="25"
                        type="text"
                      />
                    </div>
                    <button
                      class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                      type="submit"
                    >
                      Update Post
                    </button>
                  </form>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="mb-6"
                      >
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="title"
                        >
                          Post Title
                        </label>
                        <input
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="title"
                          name="title"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />
                      </div>,
                      <div
                        className="mb-6"
                      >
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="body"
                        >
                          Post Body
                        </label>
                        <textarea
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="body"
                          name="body"
                          onChange={[Function]}
                          rows="25"
                          type="text"
                          value=""
                        />
                      </div>,
                      <button
                        className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                        type="submit"
                      >
                        Update Post
                      </button>,
                    ],
                    "className": "",
                    "onSubmit": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <div
                        class="mb-6"
                      >
                        <label
                          class="block text-grey-darker text-sm font-bold mb-2"
                          for="title"
                        >
                          Post Title
                        </label>
                        <input
                          class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="title"
                          name="title"
                          type="text"
                          value=""
                        />
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <label
                            className="block text-grey-darker text-sm font-bold mb-2"
                            htmlFor="title"
                          >
                            Post Title
                          </label>,
                          <input
                            className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="title"
                            name="title"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />,
                        ],
                        "className": "mb-6",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <label
                            class="block text-grey-darker text-sm font-bold mb-2"
                            for="title"
                          >
                            Post Title
                          </label>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Post Title",
                            "className": "block text-grey-darker text-sm font-bold mb-2",
                            "htmlFor": "title",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Post Title",
                          ],
                          "type": "label",
                        },
                        Object {
                          "instance": <input
                            class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="title"
                            name="title"
                            type="text"
                            value=""
                          />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "className": "appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline",
                            "id": "title",
                            "name": "title",
                            "onChange": [Function],
                            "type": "text",
                            "value": "",
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "input",
                        },
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": <div
                        class="mb-6"
                      >
                        <label
                          class="block text-grey-darker text-sm font-bold mb-2"
                          for="body"
                        >
                          Post Body
                        </label>
                        <textarea
                          class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="body"
                          name="body"
                          rows="25"
                          type="text"
                        />
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <label
                            className="block text-grey-darker text-sm font-bold mb-2"
                            htmlFor="body"
                          >
                            Post Body
                          </label>,
                          <textarea
                            className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="body"
                            name="body"
                            onChange={[Function]}
                            rows="25"
                            type="text"
                            value=""
                          />,
                        ],
                        "className": "mb-6",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <label
                            class="block text-grey-darker text-sm font-bold mb-2"
                            for="body"
                          >
                            Post Body
                          </label>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Post Body",
                            "className": "block text-grey-darker text-sm font-bold mb-2",
                            "htmlFor": "body",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Post Body",
                          ],
                          "type": "label",
                        },
                        Object {
                          "instance": <textarea
                            class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="body"
                            name="body"
                            rows="25"
                            type="text"
                          />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "className": "appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline",
                            "id": "body",
                            "name": "body",
                            "onChange": [Function],
                            "rows": "25",
                            "type": "text",
                            "value": "",
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "textarea",
                        },
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": <button
                        class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                        type="submit"
                      >
                        Update Post
                      </button>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Update Post",
                        "className": "bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline",
                        "type": "submit",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Update Post",
                      ],
                      "type": "button",
                    },
                  ],
                  "type": "form",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": <div
                class="w-1/2 ml-3"
              >
                <div
                  class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                >
                  Preview
                </div>
                <div
                  class="p-4 border rounded markdown"
                >
                  <p>
                    #
                  </p>
                  <span />
                </div>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="block text-grey-darker text-sm font-bold mb-2 ml-4"
                  >
                    Preview
                  </div>,
                  <div
                    className="p-4 border rounded markdown"
                  >
                    <Markdown>
                      # 
                    </Markdown>
                    <Markdown>
                      
                    </Markdown>
                  </div>,
                ],
                "className": "w-1/2 ml-3",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div
                    class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                  >
                    Preview
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Preview",
                    "className": "block text-grey-darker text-sm font-bold mb-2 ml-4",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Preview",
                  ],
                  "type": "div",
                },
                Object {
                  "instance": <div
                    class="p-4 border rounded markdown"
                  >
                    <p>
                      #
                    </p>
                    <span />
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Markdown>
                        # 
                      </Markdown>,
                      <Markdown>
                        
                      </Markdown>,
                    ],
                    "className": "p-4 border rounded markdown",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "# ",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <p>
                          #
                        </p>,
                        "key": "0",
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            "#",
                          ],
                          "className": undefined,
                        },
                        "ref": null,
                        "rendered": Array [
                          "#",
                        ],
                        "type": "p",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <span />,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "className": undefined,
                        },
                        "ref": null,
                        "rendered": Array [
                          undefined,
                        ],
                        "type": "span",
                      },
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": Post {
        "_reactInternalFiber": FiberNode {
          "_debugID": 50,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "match": Object {
                  "params": Object {
                    "id": "1",
                  },
                },
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "match": Object {
                  "params": Object {
                    "id": "1",
                  },
                },
              },
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="container mx-auto"
                    >
                      <h1
                        class="mb-6 mt-6"
                      >
                        Edit Post
                      </h1>
                      <div
                        class="flex"
                      >
                        <div
                          class="w-1/2 mr-3"
                        >
                          <form
                            class=""
                          >
                            <div
                              class="mb-6"
                            >
                              <label
                                class="block text-grey-darker text-sm font-bold mb-2"
                                for="title"
                              >
                                Post Title
                              </label>
                              <input
                                class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                                id="title"
                                name="title"
                                type="text"
                                value=""
                              />
                            </div>
                            <div
                              class="mb-6"
                            >
                              <label
                                class="block text-grey-darker text-sm font-bold mb-2"
                                for="body"
                              >
                                Post Body
                              </label>
                              <textarea
                                class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                                id="body"
                                name="body"
                                rows="25"
                                type="text"
                              />
                            </div>
                            <button
                              class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                              type="submit"
                            >
                              Update Post
                            </button>
                          </form>
                        </div>
                        <div
                          class="w-1/2 ml-3"
                        >
                          <div
                            class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                          >
                            Preview
                          </div>
                          <div
                            class="p-4 border rounded markdown"
                          >
                            <p>
                              #
                            </p>
                            <span />
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "match": Object {
                              "params": Object {
                                "id": "1",
                              },
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "match": Object {
                              "params": Object {
                                "id": "1",
                              },
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "match": Object {
                        "params": Object {
                          "id": "1",
                        },
                      },
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container mx-auto"
                  >
                    <h1
                      class="mb-6 mt-6"
                    >
                      Edit Post
                    </h1>
                    <div
                      class="flex"
                    >
                      <div
                        class="w-1/2 mr-3"
                      >
                        <form
                          class=""
                        >
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="title"
                            >
                              Post Title
                            </label>
                            <input
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="title"
                              name="title"
                              type="text"
                              value=""
                            />
                          </div>
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="body"
                            >
                              Post Body
                            </label>
                            <textarea
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="body"
                              name="body"
                              rows="25"
                              type="text"
                            />
                          </div>
                          <button
                            class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                            type="submit"
                          >
                            Update Post
                          </button>
                        </form>
                      </div>
                      <div
                        class="w-1/2 ml-3"
                      >
                        <div
                          class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                        >
                          Preview
                        </div>
                        <div
                          class="p-4 border rounded markdown"
                        >
                          <p>
                            #
                          </p>
                          <span />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "match": Object {
                          "params": Object {
                            "id": "1",
                          },
                        },
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "match": Object {
                  "params": Object {
                    "id": "1",
                  },
                },
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="container mx-auto"
                    >
                      <h1
                        class="mb-6 mt-6"
                      >
                        Edit Post
                      </h1>
                      <div
                        class="flex"
                      >
                        <div
                          class="w-1/2 mr-3"
                        >
                          <form
                            class=""
                          >
                            <div
                              class="mb-6"
                            >
                              <label
                                class="block text-grey-darker text-sm font-bold mb-2"
                                for="title"
                              >
                                Post Title
                              </label>
                              <input
                                class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                                id="title"
                                name="title"
                                type="text"
                                value=""
                              />
                            </div>
                            <div
                              class="mb-6"
                            >
                              <label
                                class="block text-grey-darker text-sm font-bold mb-2"
                                for="body"
                              >
                                Post Body
                              </label>
                              <textarea
                                class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                                id="body"
                                name="body"
                                rows="25"
                                type="text"
                              />
                            </div>
                            <button
                              class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                              type="submit"
                            >
                              Update Post
                            </button>
                          </form>
                        </div>
                        <div
                          class="w-1/2 ml-3"
                        >
                          <div
                            class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                          >
                            Preview
                          </div>
                          <div
                            class="p-4 border rounded markdown"
                          >
                            <p>
                              #
                            </p>
                            <span />
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "match": Object {
                              "params": Object {
                                "id": "1",
                              },
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "match": Object {
                              "params": Object {
                                "id": "1",
                              },
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "match": Object {
                        "params": Object {
                          "id": "1",
                        },
                      },
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container mx-auto"
                  >
                    <h1
                      class="mb-6 mt-6"
                    >
                      Edit Post
                    </h1>
                    <div
                      class="flex"
                    >
                      <div
                        class="w-1/2 mr-3"
                      >
                        <form
                          class=""
                        >
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="title"
                            >
                              Post Title
                            </label>
                            <input
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="title"
                              name="title"
                              type="text"
                              value=""
                            />
                          </div>
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="body"
                            >
                              Post Body
                            </label>
                            <textarea
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="body"
                              name="body"
                              rows="25"
                              type="text"
                            />
                          </div>
                          <button
                            class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                            type="submit"
                          >
                            Update Post
                          </button>
                        </form>
                      </div>
                      <div
                        class="w-1/2 ml-3"
                      >
                        <div
                          class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                        >
                          Preview
                        </div>
                        <div
                          class="p-4 border rounded markdown"
                        >
                          <p>
                            #
                          </p>
                          <span />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "match": Object {
                          "params": Object {
                            "id": "1",
                          },
                        },
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "match": Object {
                    "params": Object {
                      "id": "1",
                    },
                  },
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "match": Object {
                    "params": Object {
                      "id": "1",
                    },
                  },
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "h1",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "Edit Post",
                "className": "mb-6 mt-6",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": "Edit Post",
                "className": "mb-6 mt-6",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 56,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 57,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 60,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "label",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Post Title",
                          "className": "block text-grey-darker text-sm font-bold mb-2",
                          "htmlFor": "title",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Post Title",
                          "className": "block text-grey-darker text-sm font-bold mb-2",
                          "htmlFor": "title",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 61,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "input",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "className": "appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline",
                            "id": "title",
                            "name": "title",
                            "onChange": [Function],
                            "type": "text",
                            "value": "",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "className": "appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline",
                            "id": "title",
                            "name": "title",
                            "onChange": [Function],
                            "type": "text",
                            "value": "",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <input
                            class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="title"
                            name="title"
                            type="text"
                            value=""
                          />,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "input",
                          "updateQueue": null,
                        },
                        "stateNode": <label
                          class="block text-grey-darker text-sm font-bold mb-2"
                          for="title"
                        >
                          Post Title
                        </label>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "label",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <label
                            className="block text-grey-darker text-sm font-bold mb-2"
                            htmlFor="title"
                          >
                            Post Title
                          </label>,
                          <input
                            className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="title"
                            name="title"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />,
                        ],
                        "className": "mb-6",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <label
                            className="block text-grey-darker text-sm font-bold mb-2"
                            htmlFor="title"
                          >
                            Post Title
                          </label>,
                          <input
                            className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="title"
                            name="title"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />,
                        ],
                        "className": "mb-6",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 58,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 62,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "label",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Post Body",
                            "className": "block text-grey-darker text-sm font-bold mb-2",
                            "htmlFor": "body",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Post Body",
                            "className": "block text-grey-darker text-sm font-bold mb-2",
                            "htmlFor": "body",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 63,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "textarea",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "className": "appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline",
                              "id": "body",
                              "name": "body",
                              "onChange": [Function],
                              "rows": "25",
                              "type": "text",
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "className": "appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline",
                              "id": "body",
                              "name": "body",
                              "onChange": [Function],
                              "rows": "25",
                              "type": "text",
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <textarea
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="body"
                              name="body"
                              rows="25"
                              type="text"
                            />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "textarea",
                            "updateQueue": null,
                          },
                          "stateNode": <label
                            class="block text-grey-darker text-sm font-bold mb-2"
                            for="body"
                          >
                            Post Body
                          </label>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "label",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <label
                              className="block text-grey-darker text-sm font-bold mb-2"
                              htmlFor="body"
                            >
                              Post Body
                            </label>,
                            <textarea
                              className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="body"
                              name="body"
                              onChange={[Function]}
                              rows="25"
                              type="text"
                              value=""
                            />,
                          ],
                          "className": "mb-6",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <label
                              className="block text-grey-darker text-sm font-bold mb-2"
                              htmlFor="body"
                            >
                              Post Body
                            </label>,
                            <textarea
                              className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="body"
                              name="body"
                              onChange={[Function]}
                              rows="25"
                              type="text"
                              value=""
                            />,
                          ],
                          "className": "mb-6",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 59,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "button",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 2,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Update Post",
                            "className": "bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline",
                            "type": "submit",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Update Post",
                            "className": "bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline",
                            "type": "submit",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <button
                            class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                            type="submit"
                          >
                            Update Post
                          </button>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "button",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="mb-6"
                        >
                          <label
                            class="block text-grey-darker text-sm font-bold mb-2"
                            for="body"
                          >
                            Post Body
                          </label>
                          <textarea
                            class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="body"
                            name="body"
                            rows="25"
                            type="text"
                          />
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="mb-6"
                      >
                        <label
                          class="block text-grey-darker text-sm font-bold mb-2"
                          for="title"
                        >
                          Post Title
                        </label>
                        <input
                          class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="title"
                          name="title"
                          type="text"
                          value=""
                        />
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "form",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="mb-6"
                        >
                          <label
                            className="block text-grey-darker text-sm font-bold mb-2"
                            htmlFor="title"
                          >
                            Post Title
                          </label>
                          <input
                            className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="title"
                            name="title"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </div>,
                        <div
                          className="mb-6"
                        >
                          <label
                            className="block text-grey-darker text-sm font-bold mb-2"
                            htmlFor="body"
                          >
                            Post Body
                          </label>
                          <textarea
                            className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="body"
                            name="body"
                            onChange={[Function]}
                            rows="25"
                            type="text"
                            value=""
                          />
                        </div>,
                        <button
                          className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                          type="submit"
                        >
                          Update Post
                        </button>,
                      ],
                      "className": "",
                      "onSubmit": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          className="mb-6"
                        >
                          <label
                            className="block text-grey-darker text-sm font-bold mb-2"
                            htmlFor="title"
                          >
                            Post Title
                          </label>
                          <input
                            className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="title"
                            name="title"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </div>,
                        <div
                          className="mb-6"
                        >
                          <label
                            className="block text-grey-darker text-sm font-bold mb-2"
                            htmlFor="body"
                          >
                            Post Body
                          </label>
                          <textarea
                            className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="body"
                            name="body"
                            onChange={[Function]}
                            rows="25"
                            type="text"
                            value=""
                          />
                        </div>,
                        <button
                          className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                          type="submit"
                        >
                          Update Post
                        </button>,
                      ],
                      "className": "",
                      "onSubmit": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <form
                      class=""
                    >
                      <div
                        class="mb-6"
                      >
                        <label
                          class="block text-grey-darker text-sm font-bold mb-2"
                          for="title"
                        >
                          Post Title
                        </label>
                        <input
                          class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="title"
                          name="title"
                          type="text"
                          value=""
                        />
                      </div>
                      <div
                        class="mb-6"
                      >
                        <label
                          class="block text-grey-darker text-sm font-bold mb-2"
                          for="body"
                        >
                          Post Body
                        </label>
                        <textarea
                          class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="body"
                          name="body"
                          rows="25"
                          type="text"
                        />
                      </div>
                      <button
                        class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                        type="submit"
                      >
                        Update Post
                      </button>
                    </form>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "form",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <form
                      className=""
                      onSubmit={[Function]}
                    >
                      <div
                        className="mb-6"
                      >
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="title"
                        >
                          Post Title
                        </label>
                        <input
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="title"
                          name="title"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />
                      </div>
                      <div
                        className="mb-6"
                      >
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="body"
                        >
                          Post Body
                        </label>
                        <textarea
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="body"
                          name="body"
                          onChange={[Function]}
                          rows="25"
                          type="text"
                          value=""
                        />
                      </div>
                      <button
                        className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                        type="submit"
                      >
                        Update Post
                      </button>
                    </form>,
                    "className": "w-1/2 mr-3",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <form
                      className=""
                      onSubmit={[Function]}
                    >
                      <div
                        className="mb-6"
                      >
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="title"
                        >
                          Post Title
                        </label>
                        <input
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="title"
                          name="title"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />
                      </div>
                      <div
                        className="mb-6"
                      >
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="body"
                        >
                          Post Body
                        </label>
                        <textarea
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="body"
                          name="body"
                          onChange={[Function]}
                          rows="25"
                          type="text"
                          value=""
                        />
                      </div>
                      <button
                        className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                        type="submit"
                      >
                        Update Post
                      </button>
                    </form>,
                    "className": "w-1/2 mr-3",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 64,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Preview",
                        "className": "block text-grey-darker text-sm font-bold mb-2 ml-4",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Preview",
                        "className": "block text-grey-darker text-sm font-bold mb-2 ml-4",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 65,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 66,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 68,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 69,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": "#",
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": "#",
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": #,
                              "tag": 6,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "p",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": "0",
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                "#",
                              ],
                              "className": undefined,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                "#",
                              ],
                              "className": undefined,
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <p>
                              #
                            </p>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "p",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "# ",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "# ",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 67,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 70,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "span",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "className": undefined,
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "className": undefined,
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <span />,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "span",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <Markdown>
                              # 
                            </Markdown>,
                            <Markdown>
                              
                            </Markdown>,
                          ],
                          "className": "p-4 border rounded markdown",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <Markdown>
                              # 
                            </Markdown>,
                            <Markdown>
                              
                            </Markdown>,
                          ],
                          "className": "p-4 border rounded markdown",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="p-4 border rounded markdown"
                        >
                          <p>
                            #
                          </p>
                          <span />
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                      >
                        Preview
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="block text-grey-darker text-sm font-bold mb-2 ml-4"
                        >
                          Preview
                        </div>,
                        <div
                          className="p-4 border rounded markdown"
                        >
                          <Markdown>
                            # 
                          </Markdown>
                          <Markdown>
                            
                          </Markdown>
                        </div>,
                      ],
                      "className": "w-1/2 ml-3",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          className="block text-grey-darker text-sm font-bold mb-2 ml-4"
                        >
                          Preview
                        </div>,
                        <div
                          className="p-4 border rounded markdown"
                        >
                          <Markdown>
                            # 
                          </Markdown>
                          <Markdown>
                            
                          </Markdown>
                        </div>,
                      ],
                      "className": "w-1/2 ml-3",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="w-1/2 ml-3"
                    >
                      <div
                        class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                      >
                        Preview
                      </div>
                      <div
                        class="p-4 border rounded markdown"
                      >
                        <p>
                          #
                        </p>
                        <span />
                      </div>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="w-1/2 mr-3"
                  >
                    <form
                      class=""
                    >
                      <div
                        class="mb-6"
                      >
                        <label
                          class="block text-grey-darker text-sm font-bold mb-2"
                          for="title"
                        >
                          Post Title
                        </label>
                        <input
                          class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="title"
                          name="title"
                          type="text"
                          value=""
                        />
                      </div>
                      <div
                        class="mb-6"
                      >
                        <label
                          class="block text-grey-darker text-sm font-bold mb-2"
                          for="body"
                        >
                          Post Body
                        </label>
                        <textarea
                          class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="body"
                          name="body"
                          rows="25"
                          type="text"
                        />
                      </div>
                      <button
                        class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                        type="submit"
                      >
                        Update Post
                      </button>
                    </form>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="w-1/2 mr-3"
                    >
                      <form
                        className=""
                        onSubmit={[Function]}
                      >
                        <div
                          className="mb-6"
                        >
                          <label
                            className="block text-grey-darker text-sm font-bold mb-2"
                            htmlFor="title"
                          >
                            Post Title
                          </label>
                          <input
                            className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="title"
                            name="title"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </div>
                        <div
                          className="mb-6"
                        >
                          <label
                            className="block text-grey-darker text-sm font-bold mb-2"
                            htmlFor="body"
                          >
                            Post Body
                          </label>
                          <textarea
                            className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="body"
                            name="body"
                            onChange={[Function]}
                            rows="25"
                            type="text"
                            value=""
                          />
                        </div>
                        <button
                          className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                          type="submit"
                        >
                          Update Post
                        </button>
                      </form>
                    </div>,
                    <div
                      className="w-1/2 ml-3"
                    >
                      <div
                        className="block text-grey-darker text-sm font-bold mb-2 ml-4"
                      >
                        Preview
                      </div>
                      <div
                        className="p-4 border rounded markdown"
                      >
                        <Markdown>
                          # 
                        </Markdown>
                        <Markdown>
                          
                        </Markdown>
                      </div>
                    </div>,
                  ],
                  "className": "flex",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div
                      className="w-1/2 mr-3"
                    >
                      <form
                        className=""
                        onSubmit={[Function]}
                      >
                        <div
                          className="mb-6"
                        >
                          <label
                            className="block text-grey-darker text-sm font-bold mb-2"
                            htmlFor="title"
                          >
                            Post Title
                          </label>
                          <input
                            className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="title"
                            name="title"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </div>
                        <div
                          className="mb-6"
                        >
                          <label
                            className="block text-grey-darker text-sm font-bold mb-2"
                            htmlFor="body"
                          >
                            Post Body
                          </label>
                          <textarea
                            className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="body"
                            name="body"
                            onChange={[Function]}
                            rows="25"
                            type="text"
                            value=""
                          />
                        </div>
                        <button
                          className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                          type="submit"
                        >
                          Update Post
                        </button>
                      </form>
                    </div>,
                    <div
                      className="w-1/2 ml-3"
                    >
                      <div
                        className="block text-grey-darker text-sm font-bold mb-2 ml-4"
                      >
                        Preview
                      </div>
                      <div
                        className="p-4 border rounded markdown"
                      >
                        <Markdown>
                          # 
                        </Markdown>
                        <Markdown>
                          
                        </Markdown>
                      </div>
                    </div>,
                  ],
                  "className": "flex",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="flex"
                >
                  <div
                    class="w-1/2 mr-3"
                  >
                    <form
                      class=""
                    >
                      <div
                        class="mb-6"
                      >
                        <label
                          class="block text-grey-darker text-sm font-bold mb-2"
                          for="title"
                        >
                          Post Title
                        </label>
                        <input
                          class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="title"
                          name="title"
                          type="text"
                          value=""
                        />
                      </div>
                      <div
                        class="mb-6"
                      >
                        <label
                          class="block text-grey-darker text-sm font-bold mb-2"
                          for="body"
                        >
                          Post Body
                        </label>
                        <textarea
                          class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="body"
                          name="body"
                          rows="25"
                          type="text"
                        />
                      </div>
                      <button
                        class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                        type="submit"
                      >
                        Update Post
                      </button>
                    </form>
                  </div>
                  <div
                    class="w-1/2 ml-3"
                  >
                    <div
                      class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                    >
                      Preview
                    </div>
                    <div
                      class="p-4 border rounded markdown"
                    >
                      <p>
                        #
                      </p>
                      <span />
                    </div>
                  </div>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <h1
                class="mb-6 mt-6"
              >
                Edit Post
              </h1>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "h1",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 0,
            "elementType": "div",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <h1
                  className="mb-6 mt-6"
                >
                  Edit Post
                </h1>,
                <div
                  className="flex"
                >
                  <div
                    className="w-1/2 mr-3"
                  >
                    <form
                      className=""
                      onSubmit={[Function]}
                    >
                      <div
                        className="mb-6"
                      >
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="title"
                        >
                          Post Title
                        </label>
                        <input
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="title"
                          name="title"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />
                      </div>
                      <div
                        className="mb-6"
                      >
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="body"
                        >
                          Post Body
                        </label>
                        <textarea
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="body"
                          name="body"
                          onChange={[Function]}
                          rows="25"
                          type="text"
                          value=""
                        />
                      </div>
                      <button
                        className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                        type="submit"
                      >
                        Update Post
                      </button>
                    </form>
                  </div>
                  <div
                    className="w-1/2 ml-3"
                  >
                    <div
                      className="block text-grey-darker text-sm font-bold mb-2 ml-4"
                    >
                      Preview
                    </div>
                    <div
                      className="p-4 border rounded markdown"
                    >
                      <Markdown>
                        # 
                      </Markdown>
                      <Markdown>
                        
                      </Markdown>
                    </div>
                  </div>
                </div>,
              ],
              "className": "container mx-auto",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <h1
                  className="mb-6 mt-6"
                >
                  Edit Post
                </h1>,
                <div
                  className="flex"
                >
                  <div
                    className="w-1/2 mr-3"
                  >
                    <form
                      className=""
                      onSubmit={[Function]}
                    >
                      <div
                        className="mb-6"
                      >
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="title"
                        >
                          Post Title
                        </label>
                        <input
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="title"
                          name="title"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />
                      </div>
                      <div
                        className="mb-6"
                      >
                        <label
                          className="block text-grey-darker text-sm font-bold mb-2"
                          htmlFor="body"
                        >
                          Post Body
                        </label>
                        <textarea
                          className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="body"
                          name="body"
                          onChange={[Function]}
                          rows="25"
                          type="text"
                          value=""
                        />
                      </div>
                      <button
                        className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                        type="submit"
                      >
                        Update Post
                      </button>
                    </form>
                  </div>
                  <div
                    className="w-1/2 ml-3"
                  >
                    <div
                      className="block text-grey-darker text-sm font-bold mb-2 ml-4"
                    >
                      Preview
                    </div>
                    <div
                      className="p-4 border rounded markdown"
                    >
                      <Markdown>
                        # 
                      </Markdown>
                      <Markdown>
                        
                      </Markdown>
                    </div>
                  </div>
                </div>,
              ],
              "className": "container mx-auto",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <div
              class="container mx-auto"
            >
              <h1
                class="mb-6 mt-6"
              >
                Edit Post
              </h1>
              <div
                class="flex"
              >
                <div
                  class="w-1/2 mr-3"
                >
                  <form
                    class=""
                  >
                    <div
                      class="mb-6"
                    >
                      <label
                        class="block text-grey-darker text-sm font-bold mb-2"
                        for="title"
                      >
                        Post Title
                      </label>
                      <input
                        class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="title"
                        name="title"
                        type="text"
                        value=""
                      />
                    </div>
                    <div
                      class="mb-6"
                    >
                      <label
                        class="block text-grey-darker text-sm font-bold mb-2"
                        for="body"
                      >
                        Post Body
                      </label>
                      <textarea
                        class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="body"
                        name="body"
                        rows="25"
                        type="text"
                      />
                    </div>
                    <button
                      class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                      type="submit"
                    >
                      Update Post
                    </button>
                  </form>
                </div>
                <div
                  class="w-1/2 ml-3"
                >
                  <div
                    class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                  >
                    Preview
                  </div>
                  <div
                    class="p-4 border rounded markdown"
                  >
                    <p>
                      #
                    </p>
                    <span />
                  </div>
                </div>
              </div>
            </div>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "div",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 5,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "match": Object {
              "params": Object {
                "id": "1",
              },
            },
          },
          "memoizedState": Object {
            "body": "",
            "title": "",
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "match": Object {
                  "params": Object {
                    "id": "1",
                  },
                },
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "match": Object {
                  "params": Object {
                    "id": "1",
                  },
                },
              },
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="container mx-auto"
                    >
                      <h1
                        class="mb-6 mt-6"
                      >
                        Edit Post
                      </h1>
                      <div
                        class="flex"
                      >
                        <div
                          class="w-1/2 mr-3"
                        >
                          <form
                            class=""
                          >
                            <div
                              class="mb-6"
                            >
                              <label
                                class="block text-grey-darker text-sm font-bold mb-2"
                                for="title"
                              >
                                Post Title
                              </label>
                              <input
                                class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                                id="title"
                                name="title"
                                type="text"
                                value=""
                              />
                            </div>
                            <div
                              class="mb-6"
                            >
                              <label
                                class="block text-grey-darker text-sm font-bold mb-2"
                                for="body"
                              >
                                Post Body
                              </label>
                              <textarea
                                class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                                id="body"
                                name="body"
                                rows="25"
                                type="text"
                              />
                            </div>
                            <button
                              class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                              type="submit"
                            >
                              Update Post
                            </button>
                          </form>
                        </div>
                        <div
                          class="w-1/2 ml-3"
                        >
                          <div
                            class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                          >
                            Preview
                          </div>
                          <div
                            class="p-4 border rounded markdown"
                          >
                            <p>
                              #
                            </p>
                            <span />
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "match": Object {
                              "params": Object {
                                "id": "1",
                              },
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "match": Object {
                              "params": Object {
                                "id": "1",
                              },
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "match": Object {
                        "params": Object {
                          "id": "1",
                        },
                      },
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container mx-auto"
                  >
                    <h1
                      class="mb-6 mt-6"
                    >
                      Edit Post
                    </h1>
                    <div
                      class="flex"
                    >
                      <div
                        class="w-1/2 mr-3"
                      >
                        <form
                          class=""
                        >
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="title"
                            >
                              Post Title
                            </label>
                            <input
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="title"
                              name="title"
                              type="text"
                              value=""
                            />
                          </div>
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="body"
                            >
                              Post Body
                            </label>
                            <textarea
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="body"
                              name="body"
                              rows="25"
                              type="text"
                            />
                          </div>
                          <button
                            class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                            type="submit"
                          >
                            Update Post
                          </button>
                        </form>
                      </div>
                      <div
                        class="w-1/2 ml-3"
                      >
                        <div
                          class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                        >
                          Preview
                        </div>
                        <div
                          class="p-4 border rounded markdown"
                        >
                          <p>
                            #
                          </p>
                          <span />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "match": Object {
                          "params": Object {
                            "id": "1",
                          },
                        },
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "match": Object {
                  "params": Object {
                    "id": "1",
                  },
                },
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="container mx-auto"
                    >
                      <h1
                        class="mb-6 mt-6"
                      >
                        Edit Post
                      </h1>
                      <div
                        class="flex"
                      >
                        <div
                          class="w-1/2 mr-3"
                        >
                          <form
                            class=""
                          >
                            <div
                              class="mb-6"
                            >
                              <label
                                class="block text-grey-darker text-sm font-bold mb-2"
                                for="title"
                              >
                                Post Title
                              </label>
                              <input
                                class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                                id="title"
                                name="title"
                                type="text"
                                value=""
                              />
                            </div>
                            <div
                              class="mb-6"
                            >
                              <label
                                class="block text-grey-darker text-sm font-bold mb-2"
                                for="body"
                              >
                                Post Body
                              </label>
                              <textarea
                                class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                                id="body"
                                name="body"
                                rows="25"
                                type="text"
                              />
                            </div>
                            <button
                              class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                              type="submit"
                            >
                              Update Post
                            </button>
                          </form>
                        </div>
                        <div
                          class="w-1/2 ml-3"
                        >
                          <div
                            class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                          >
                            Preview
                          </div>
                          <div
                            class="p-4 border rounded markdown"
                          >
                            <p>
                              #
                            </p>
                            <span />
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "match": Object {
                              "params": Object {
                                "id": "1",
                              },
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "match": Object {
                              "params": Object {
                                "id": "1",
                              },
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "match": Object {
                        "params": Object {
                          "id": "1",
                        },
                      },
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container mx-auto"
                  >
                    <h1
                      class="mb-6 mt-6"
                    >
                      Edit Post
                    </h1>
                    <div
                      class="flex"
                    >
                      <div
                        class="w-1/2 mr-3"
                      >
                        <form
                          class=""
                        >
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="title"
                            >
                              Post Title
                            </label>
                            <input
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="title"
                              name="title"
                              type="text"
                              value=""
                            />
                          </div>
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="body"
                            >
                              Post Body
                            </label>
                            <textarea
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="body"
                              name="body"
                              rows="25"
                              type="text"
                            />
                          </div>
                          <button
                            class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                            type="submit"
                          >
                            Update Post
                          </button>
                        </form>
                      </div>
                      <div
                        class="w-1/2 ml-3"
                      >
                        <div
                          class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                        >
                          Preview
                        </div>
                        <div
                          class="p-4 border rounded markdown"
                        >
                          <p>
                            #
                          </p>
                          <span />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "match": Object {
                          "params": Object {
                            "id": "1",
                          },
                        },
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "match": Object {
                    "params": Object {
                      "id": "1",
                    },
                  },
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "match": Object {
                    "params": Object {
                      "id": "1",
                    },
                  },
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "pendingProps": Object {
            "match": Object {
              "params": Object {
                "id": "1",
              },
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "match": Object {
                  "params": Object {
                    "id": "1",
                  },
                },
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "match": Object {
                  "params": Object {
                    "id": "1",
                  },
                },
              },
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="container mx-auto"
                    >
                      <h1
                        class="mb-6 mt-6"
                      >
                        Edit Post
                      </h1>
                      <div
                        class="flex"
                      >
                        <div
                          class="w-1/2 mr-3"
                        >
                          <form
                            class=""
                          >
                            <div
                              class="mb-6"
                            >
                              <label
                                class="block text-grey-darker text-sm font-bold mb-2"
                                for="title"
                              >
                                Post Title
                              </label>
                              <input
                                class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                                id="title"
                                name="title"
                                type="text"
                                value=""
                              />
                            </div>
                            <div
                              class="mb-6"
                            >
                              <label
                                class="block text-grey-darker text-sm font-bold mb-2"
                                for="body"
                              >
                                Post Body
                              </label>
                              <textarea
                                class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                                id="body"
                                name="body"
                                rows="25"
                                type="text"
                              />
                            </div>
                            <button
                              class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                              type="submit"
                            >
                              Update Post
                            </button>
                          </form>
                        </div>
                        <div
                          class="w-1/2 ml-3"
                        >
                          <div
                            class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                          >
                            Preview
                          </div>
                          <div
                            class="p-4 border rounded markdown"
                          >
                            <p>
                              #
                            </p>
                            <span />
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "match": Object {
                              "params": Object {
                                "id": "1",
                              },
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "match": Object {
                              "params": Object {
                                "id": "1",
                              },
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "match": Object {
                        "params": Object {
                          "id": "1",
                        },
                      },
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container mx-auto"
                  >
                    <h1
                      class="mb-6 mt-6"
                    >
                      Edit Post
                    </h1>
                    <div
                      class="flex"
                    >
                      <div
                        class="w-1/2 mr-3"
                      >
                        <form
                          class=""
                        >
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="title"
                            >
                              Post Title
                            </label>
                            <input
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="title"
                              name="title"
                              type="text"
                              value=""
                            />
                          </div>
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="body"
                            >
                              Post Body
                            </label>
                            <textarea
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="body"
                              name="body"
                              rows="25"
                              type="text"
                            />
                          </div>
                          <button
                            class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                            type="submit"
                          >
                            Update Post
                          </button>
                        </form>
                      </div>
                      <div
                        class="w-1/2 ml-3"
                      >
                        <div
                          class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                        >
                          Preview
                        </div>
                        <div
                          class="p-4 border rounded markdown"
                        >
                          <p>
                            #
                          </p>
                          <span />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "match": Object {
                          "params": Object {
                            "id": "1",
                          },
                        },
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "match": Object {
                  "params": Object {
                    "id": "1",
                  },
                },
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="container mx-auto"
                    >
                      <h1
                        class="mb-6 mt-6"
                      >
                        Edit Post
                      </h1>
                      <div
                        class="flex"
                      >
                        <div
                          class="w-1/2 mr-3"
                        >
                          <form
                            class=""
                          >
                            <div
                              class="mb-6"
                            >
                              <label
                                class="block text-grey-darker text-sm font-bold mb-2"
                                for="title"
                              >
                                Post Title
                              </label>
                              <input
                                class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                                id="title"
                                name="title"
                                type="text"
                                value=""
                              />
                            </div>
                            <div
                              class="mb-6"
                            >
                              <label
                                class="block text-grey-darker text-sm font-bold mb-2"
                                for="body"
                              >
                                Post Body
                              </label>
                              <textarea
                                class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                                id="body"
                                name="body"
                                rows="25"
                                type="text"
                              />
                            </div>
                            <button
                              class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                              type="submit"
                            >
                              Update Post
                            </button>
                          </form>
                        </div>
                        <div
                          class="w-1/2 ml-3"
                        >
                          <div
                            class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                          >
                            Preview
                          </div>
                          <div
                            class="p-4 border rounded markdown"
                          >
                            <p>
                              #
                            </p>
                            <span />
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "match": Object {
                              "params": Object {
                                "id": "1",
                              },
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "match": Object {
                              "params": Object {
                                "id": "1",
                              },
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "match": Object {
                        "params": Object {
                          "id": "1",
                        },
                      },
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="container mx-auto"
                  >
                    <h1
                      class="mb-6 mt-6"
                    >
                      Edit Post
                    </h1>
                    <div
                      class="flex"
                    >
                      <div
                        class="w-1/2 mr-3"
                      >
                        <form
                          class=""
                        >
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="title"
                            >
                              Post Title
                            </label>
                            <input
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="title"
                              name="title"
                              type="text"
                              value=""
                            />
                          </div>
                          <div
                            class="mb-6"
                          >
                            <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="body"
                            >
                              Post Body
                            </label>
                            <textarea
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="body"
                              name="body"
                              rows="25"
                              type="text"
                            />
                          </div>
                          <button
                            class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                            type="submit"
                          >
                            Update Post
                          </button>
                        </form>
                      </div>
                      <div
                        class="w-1/2 ml-3"
                      >
                        <div
                          class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                        >
                          Preview
                        </div>
                        <div
                          class="p-4 border rounded markdown"
                        >
                          <p>
                            #
                          </p>
                          <span />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "match": Object {
                          "params": Object {
                            "id": "1",
                          },
                        },
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "match": Object {
                    "params": Object {
                      "id": "1",
                    },
                  },
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "match": Object {
                    "params": Object {
                      "id": "1",
                    },
                  },
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "handleChange": [Function],
        "handleSubmit": [Function],
        "props": Object {
          "match": Object {
            "params": Object {
              "id": "1",
            },
          },
        },
        "refs": Object {},
        "state": Object {
          "body": "",
          "title": "",
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "match": Object {
          "params": Object {
            "id": "1",
          },
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="container mx-auto"
        >
          <h1
            class="mb-6 mt-6"
          >
            Edit Post
          </h1>
          <div
            class="flex"
          >
            <div
              class="w-1/2 mr-3"
            >
              <form
                class=""
              >
                <div
                  class="mb-6"
                >
                  <label
                    class="block text-grey-darker text-sm font-bold mb-2"
                    for="title"
                  >
                    Post Title
                  </label>
                  <input
                    class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                    id="title"
                    name="title"
                    type="text"
                    value=""
                  />
                </div>
                <div
                  class="mb-6"
                >
                  <label
                    class="block text-grey-darker text-sm font-bold mb-2"
                    for="body"
                  >
                    Post Body
                  </label>
                  <textarea
                    class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                    id="body"
                    name="body"
                    rows="25"
                    type="text"
                  />
                </div>
                <button
                  class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                  type="submit"
                >
                  Update Post
                </button>
              </form>
            </div>
            <div
              class="w-1/2 ml-3"
            >
              <div
                class="block text-grey-darker text-sm font-bold mb-2 ml-4"
              >
                Preview
              </div>
              <div
                class="p-4 border rounded markdown"
              >
                <p>
                  #
                </p>
                <span />
              </div>
            </div>
          </div>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1
              className="mb-6 mt-6"
            >
              Edit Post
            </h1>,
            <div
              className="flex"
            >
              <div
                className="w-1/2 mr-3"
              >
                <form
                  className=""
                  onSubmit={[Function]}
                >
                  <div
                    className="mb-6"
                  >
                    <label
                      className="block text-grey-darker text-sm font-bold mb-2"
                      htmlFor="title"
                    >
                      Post Title
                    </label>
                    <input
                      className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                      id="title"
                      name="title"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                  </div>
                  <div
                    className="mb-6"
                  >
                    <label
                      className="block text-grey-darker text-sm font-bold mb-2"
                      htmlFor="body"
                    >
                      Post Body
                    </label>
                    <textarea
                      className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                      id="body"
                      name="body"
                      onChange={[Function]}
                      rows="25"
                      type="text"
                      value=""
                    />
                  </div>
                  <button
                    className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                    type="submit"
                  >
                    Update Post
                  </button>
                </form>
              </div>
              <div
                className="w-1/2 ml-3"
              >
                <div
                  className="block text-grey-darker text-sm font-bold mb-2 ml-4"
                >
                  Preview
                </div>
                <div
                  className="p-4 border rounded markdown"
                >
                  <Markdown>
                    # 
                  </Markdown>
                  <Markdown>
                    
                  </Markdown>
                </div>
              </div>
            </div>,
          ],
          "className": "container mx-auto",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <h1
              class="mb-6 mt-6"
            >
              Edit Post
            </h1>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Edit Post",
              "className": "mb-6 mt-6",
            },
            "ref": null,
            "rendered": Array [
              "Edit Post",
            ],
            "type": "h1",
          },
          Object {
            "instance": <div
              class="flex"
            >
              <div
                class="w-1/2 mr-3"
              >
                <form
                  class=""
                >
                  <div
                    class="mb-6"
                  >
                    <label
                      class="block text-grey-darker text-sm font-bold mb-2"
                      for="title"
                    >
                      Post Title
                    </label>
                    <input
                      class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                      id="title"
                      name="title"
                      type="text"
                      value=""
                    />
                  </div>
                  <div
                    class="mb-6"
                  >
                    <label
                      class="block text-grey-darker text-sm font-bold mb-2"
                      for="body"
                    >
                      Post Body
                    </label>
                    <textarea
                      class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                      id="body"
                      name="body"
                      rows="25"
                      type="text"
                    />
                  </div>
                  <button
                    class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                    type="submit"
                  >
                    Update Post
                  </button>
                </form>
              </div>
              <div
                class="w-1/2 ml-3"
              >
                <div
                  class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                >
                  Preview
                </div>
                <div
                  class="p-4 border rounded markdown"
                >
                  <p>
                    #
                  </p>
                  <span />
                </div>
              </div>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="w-1/2 mr-3"
                >
                  <form
                    className=""
                    onSubmit={[Function]}
                  >
                    <div
                      className="mb-6"
                    >
                      <label
                        className="block text-grey-darker text-sm font-bold mb-2"
                        htmlFor="title"
                      >
                        Post Title
                      </label>
                      <input
                        className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="title"
                        name="title"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </div>
                    <div
                      className="mb-6"
                    >
                      <label
                        className="block text-grey-darker text-sm font-bold mb-2"
                        htmlFor="body"
                      >
                        Post Body
                      </label>
                      <textarea
                        className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="body"
                        name="body"
                        onChange={[Function]}
                        rows="25"
                        type="text"
                        value=""
                      />
                    </div>
                    <button
                      className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                      type="submit"
                    >
                      Update Post
                    </button>
                  </form>
                </div>,
                <div
                  className="w-1/2 ml-3"
                >
                  <div
                    className="block text-grey-darker text-sm font-bold mb-2 ml-4"
                  >
                    Preview
                  </div>
                  <div
                    className="p-4 border rounded markdown"
                  >
                    <Markdown>
                      # 
                    </Markdown>
                    <Markdown>
                      
                    </Markdown>
                  </div>
                </div>,
              ],
              "className": "flex",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <div
                  class="w-1/2 mr-3"
                >
                  <form
                    class=""
                  >
                    <div
                      class="mb-6"
                    >
                      <label
                        class="block text-grey-darker text-sm font-bold mb-2"
                        for="title"
                      >
                        Post Title
                      </label>
                      <input
                        class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="title"
                        name="title"
                        type="text"
                        value=""
                      />
                    </div>
                    <div
                      class="mb-6"
                    >
                      <label
                        class="block text-grey-darker text-sm font-bold mb-2"
                        for="body"
                      >
                        Post Body
                      </label>
                      <textarea
                        class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="body"
                        name="body"
                        rows="25"
                        type="text"
                      />
                    </div>
                    <button
                      class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                      type="submit"
                    >
                      Update Post
                    </button>
                  </form>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <form
                    className=""
                    onSubmit={[Function]}
                  >
                    <div
                      className="mb-6"
                    >
                      <label
                        className="block text-grey-darker text-sm font-bold mb-2"
                        htmlFor="title"
                      >
                        Post Title
                      </label>
                      <input
                        className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="title"
                        name="title"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </div>
                    <div
                      className="mb-6"
                    >
                      <label
                        className="block text-grey-darker text-sm font-bold mb-2"
                        htmlFor="body"
                      >
                        Post Body
                      </label>
                      <textarea
                        className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                        id="body"
                        name="body"
                        onChange={[Function]}
                        rows="25"
                        type="text"
                        value=""
                      />
                    </div>
                    <button
                      className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                      type="submit"
                    >
                      Update Post
                    </button>
                  </form>,
                  "className": "w-1/2 mr-3",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <form
                      class=""
                    >
                      <div
                        class="mb-6"
                      >
                        <label
                          class="block text-grey-darker text-sm font-bold mb-2"
                          for="title"
                        >
                          Post Title
                        </label>
                        <input
                          class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="title"
                          name="title"
                          type="text"
                          value=""
                        />
                      </div>
                      <div
                        class="mb-6"
                      >
                        <label
                          class="block text-grey-darker text-sm font-bold mb-2"
                          for="body"
                        >
                          Post Body
                        </label>
                        <textarea
                          class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                          id="body"
                          name="body"
                          rows="25"
                          type="text"
                        />
                      </div>
                      <button
                        class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                        type="submit"
                      >
                        Update Post
                      </button>
                    </form>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <div
                          className="mb-6"
                        >
                          <label
                            className="block text-grey-darker text-sm font-bold mb-2"
                            htmlFor="title"
                          >
                            Post Title
                          </label>
                          <input
                            className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="title"
                            name="title"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </div>,
                        <div
                          className="mb-6"
                        >
                          <label
                            className="block text-grey-darker text-sm font-bold mb-2"
                            htmlFor="body"
                          >
                            Post Body
                          </label>
                          <textarea
                            className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="body"
                            name="body"
                            onChange={[Function]}
                            rows="25"
                            type="text"
                            value=""
                          />
                        </div>,
                        <button
                          className="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                          type="submit"
                        >
                          Update Post
                        </button>,
                      ],
                      "className": "",
                      "onSubmit": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <div
                          class="mb-6"
                        >
                          <label
                            class="block text-grey-darker text-sm font-bold mb-2"
                            for="title"
                          >
                            Post Title
                          </label>
                          <input
                            class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="title"
                            name="title"
                            type="text"
                            value=""
                          />
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <label
                              className="block text-grey-darker text-sm font-bold mb-2"
                              htmlFor="title"
                            >
                              Post Title
                            </label>,
                            <input
                              className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="title"
                              name="title"
                              onChange={[Function]}
                              type="text"
                              value=""
                            />,
                          ],
                          "className": "mb-6",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="title"
                            >
                              Post Title
                            </label>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Post Title",
                              "className": "block text-grey-darker text-sm font-bold mb-2",
                              "htmlFor": "title",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Post Title",
                            ],
                            "type": "label",
                          },
                          Object {
                            "instance": <input
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="title"
                              name="title"
                              type="text"
                              value=""
                            />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "className": "appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline",
                              "id": "title",
                              "name": "title",
                              "onChange": [Function],
                              "type": "text",
                              "value": "",
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "input",
                          },
                        ],
                        "type": "div",
                      },
                      Object {
                        "instance": <div
                          class="mb-6"
                        >
                          <label
                            class="block text-grey-darker text-sm font-bold mb-2"
                            for="body"
                          >
                            Post Body
                          </label>
                          <textarea
                            class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                            id="body"
                            name="body"
                            rows="25"
                            type="text"
                          />
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <label
                              className="block text-grey-darker text-sm font-bold mb-2"
                              htmlFor="body"
                            >
                              Post Body
                            </label>,
                            <textarea
                              className="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="body"
                              name="body"
                              onChange={[Function]}
                              rows="25"
                              type="text"
                              value=""
                            />,
                          ],
                          "className": "mb-6",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <label
                              class="block text-grey-darker text-sm font-bold mb-2"
                              for="body"
                            >
                              Post Body
                            </label>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Post Body",
                              "className": "block text-grey-darker text-sm font-bold mb-2",
                              "htmlFor": "body",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Post Body",
                            ],
                            "type": "label",
                          },
                          Object {
                            "instance": <textarea
                              class="appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline"
                              id="body"
                              name="body"
                              rows="25"
                              type="text"
                            />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "className": "appearance-none border rounded w-full py-2 px-3 text-grey-darker leading-tight focus:outline-none focus:shadow-outline",
                              "id": "body",
                              "name": "body",
                              "onChange": [Function],
                              "rows": "25",
                              "type": "text",
                              "value": "",
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "textarea",
                          },
                        ],
                        "type": "div",
                      },
                      Object {
                        "instance": <button
                          class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                          type="submit"
                        >
                          Update Post
                        </button>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Update Post",
                          "className": "bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline",
                          "type": "submit",
                        },
                        "ref": null,
                        "rendered": Array [
                          "Update Post",
                        ],
                        "type": "button",
                      },
                    ],
                    "type": "form",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": <div
                  class="w-1/2 ml-3"
                >
                  <div
                    class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                  >
                    Preview
                  </div>
                  <div
                    class="p-4 border rounded markdown"
                  >
                    <p>
                      #
                    </p>
                    <span />
                  </div>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="block text-grey-darker text-sm font-bold mb-2 ml-4"
                    >
                      Preview
                    </div>,
                    <div
                      className="p-4 border rounded markdown"
                    >
                      <Markdown>
                        # 
                      </Markdown>
                      <Markdown>
                        
                      </Markdown>
                    </div>,
                  ],
                  "className": "w-1/2 ml-3",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <div
                      class="block text-grey-darker text-sm font-bold mb-2 ml-4"
                    >
                      Preview
                    </div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Preview",
                      "className": "block text-grey-darker text-sm font-bold mb-2 ml-4",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Preview",
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": <div
                      class="p-4 border rounded markdown"
                    >
                      <p>
                        #
                      </p>
                      <span />
                    </div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <Markdown>
                          # 
                        </Markdown>,
                        <Markdown>
                          
                        </Markdown>,
                      ],
                      "className": "p-4 border rounded markdown",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": "# ",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": <p>
                            #
                          </p>,
                          "key": "0",
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              "#",
                            ],
                            "className": undefined,
                          },
                          "ref": null,
                          "rendered": Array [
                            "#",
                          ],
                          "type": "p",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": "",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": <span />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "className": undefined,
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "span",
                        },
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
