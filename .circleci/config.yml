version: 2
jobs:
  build:
    parallelism: 1
    docker:
      - image: circleci/ruby:2.5.3-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: rails-with-react
          RAILS_ENV: test
      - image: circleci/postgres:11.1-alpine
        environment:
          POSTGRES_USER: rails-with-react
          POSTGRES_DB: rails-with-react_test
          POSTGRES_PASSWORD: 
    steps:
      - checkout
      - run:
          name: Which bundler?
          command: bundle -v
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-
      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Run Jest Tests
          environment:
            JEST_JUNIT_OUTPUT: "/tmp/test-results/jest/results.xml"
          command: yarn jest --runInBand --coverage --ci --reporters=default --reporters=jest-junit
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace
      - run:
          name: Run rspec in parallel
          command: bundle exec rspec --format progress --format RspecJunitFormatter -o /tmp/test-results/rspec/results.xml
      - store_test_results: 
          path: test_results
